$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer

        +Clock = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 500
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                Time = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
            }
        }

        +STM32Processor = {
            Class = IOGAM
            InputSignals = {
                MessageRxTime = {
                    DataSource = STM32
                }
                MessageTxTime = {
                    DataSource = STM32
                }
                rotor_position_steps = {
                    DataSource = STM32
                }
                encoder_counter = {
                    DataSource = STM32
                }
                motor_ImpuleAmplitude = {
                    DataSource = STM32
                }
                motor_Direction = {
                    DataSource = STM32
                }
                motor_Acceleration = {
                    DataSource = STM32
                }
                break_Control_Loop = {
                    DataSource = STM32
                }
                state = {
                    DataSource = STM32
                }
                encoder_position = {
                    DataSource = STM32
                }
            }
            OutputSignals = {
                MessageRxTime = {
                     DataSource = LoggerDataSource
		            Type = uint64
                }
                MessageTxTime = {
                     DataSource = LoggerDataSource
		            Type = uint64
                }
                rotor_position_steps = {
                    DataSource = LoggerDataSource
		            Type = int32
                }
                encoder_counter = {
                    DataSource = LoggerDataSource
		            Type = uint32
                }
                motor_ImpuleAmplitude = {
                    DataSource = LoggerDataSource
                    Type = int32
                }
                motor_Direction = {
                    DataSource = LoggerDataSource
                    Type = uint8
                }
                motor_Acceleration = {
                    DataSource = LoggerDataSource
                    Type = int32
                }
                break_Control_Loop = {
                    DataSource = LoggerDataSource
                    Type = uint8
                }
                state = {
                    DataSource = LoggerDataSource
                    Type = uint8
                }
                encoder_position = {
                    DataSource = LoggerDataSource
		            Type = float32
                }
            }
        }
        
        +InvertedGAM = {
            Class = InvertedPendulumGAM
            InputSignals = {  
                encoder_counter = {
                    DataSource = STM32
                }
                rotor_position_steps = {
                    DataSource = STM32
                }
            }
            OutputSignals = {               
                motor_ImpuleAmplitude = {
                    DataSource = STM32
		            Type = int32
                }
                motor_Direction = {
                    DataSource = STM32
		            Type = uint8
                }
                motor_Acceleration = {
                    DataSource = STM32
		            Type = int32
                }
                break_Control_Loop = {
                    DataSource = STM32
		            Type = uint8
                }
                state = {
                    DataSource = STM32
		            Type = uint8
                }
                encoder_position = {
                    DataSource = STM32
		            Type = float32
                }
                
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +STM32 = {
            Class = STM32
            Port = "/dev/ttyUSB0"
            BaudRate = 230400
            Signals = {
                ReceivedByteCount = {
                    Type = uint32
                }
                DiscardedByteCount = {
                    Type = uint32
                }
                ReadErrorCount = {
                    Type = uint32
                }
                MessageCount = {
                    Type = uint32
                }
                MessageRxTime = {
                    Type = uint64
                }
                MessageTxTime = {
                    Type = uint64
                }
                RxBufferOccupancy = {
                    Type = uint32
                }
                rotor_position_steps = {
                    Type = int32
                }
                encoder_counter = {
                    Type = uint32
                }
                motor_ImpuleAmplitude = {
                    Type = int32
                }
                motor_Direction = {
                    Type = uint8
                }
                motor_Acceleration = {
                    Type = int32
                }
                break_Control_Loop = {
                    Type = uint8
                }
                state = {
                    Type = uint8
                }
                encoder_position = {
                    Type = float32
                }
            }
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        } 

        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource

        }  
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {Clock InvertedGAM STM32Processor}
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
