$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +Constants = {
            Class = ConstantGAM
            OutputSignals = {
                state = {
                    DataSource = DDB1
		            Type = uint8
                    Default = 3
                }
            }
        }
        +FileReaderGAM = {
            Class = IOGAM
            InputSignals = { 
                motor_Acceleration = {
                    DataSource = FileReader
		            Type = int32
                }
            }
            OutputSignals = {               
                motor_Acceleration = {
                    DataSource = DDB1
		            Type = int32
                }               
            }
        }
        +PathOptGAM = {
            Class = IOGAM
            InputSignals = { 
                motor_Acceleration = {
                    DataSource = DDB1
		            Type = int32
                }
                state = {
                    DataSource = DDB1
		            Type = uint8
                }
            }
            OutputSignals = {
                motor_Acceleration = {
                    DataSource = STM32
		            Type = int32
                }
                state = {
                    DataSource = STM32
		            Type = uint8
                }
            }
        }
        +AccOutGAM = {
            Class = IOGAM
            InputSignals = { 
                MessageRxTime = {
                    DataSource = STM32
                    Type = uint64
                }
                MessageTxTime = {
                    DataSource = STM32
                    Type = uint64
                }
                rotor_position_steps = {
                    DataSource = STM32
                    Type = int32
                }
                motor_Acceleration = {
                    DataSource = DDB1
                    Type = int32
                }
            }
            OutputSignals = {               
                MessageRxTime = {
                    DataSource = STM32FileWriter
                    Type = uint64
                }
                MessageTxTime = {
                    DataSource = STM32FileWriter
                    Type = uint64
                }
                rotor_position_steps = {
                    DataSource = STM32FileWriter
                    Type = int32
                }
                motor_Acceleration = {
                    DataSource = STM32FileWriter
                    Type = int32
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }
        +FileReader = {
            Class = FileDataSource::FileReader
            Filename = "chirp_acceleration_cmd.csv"
	        Interpolate = "no"
            FileFormat = "csv"
            CSVSeparator = ","
            EOF = "Error"
            Preload = "yes"
        }
        +STM32 = {
            Class = STM32
            Port = "/dev/ttyACM0"
            BaudRate = 230400
            Signals = {
                ReceivedByteCount = {
                    Type = uint32
                }
                DiscardedByteCount = {
                    Type = uint32
                }
                ReadErrorCount = {
                    Type = uint32
                }
                MessageCount = {
                    Type = uint32
                }
                MessageRxTime = {
                    Type = uint64
                }
                MessageTxTime = {
                    Type = uint64
                }
                RxBufferOccupancy = {
                    Type = uint32
                }
                rotor_position_steps = {
                    Type = int32
                }
                encoder_counter = {
                    Type = uint32
                }
                motor_ImpuleAmplitude = {
                    Type = int32
                }
                motor_Direction = {
                    Type = uint8
                }
                motor_Acceleration = {
                    Type = int32
                }
                break_Control_Loop = {
                    Type = uint8
                }
                state = {
                    Type = uint8
                }
                encoder_position = {
                    Type = float32
                }
            }
        }
        +STM32FileWriter = {
            Class = FileDataSource::FileWriter
            NumberOfBuffers = 10000000
            CPUMask = 0xFE
            StackSize = 10000000 
            Filename = "control_data_acc.csv"
            Overwrite = "yes"
            FileFormat = "csv"
            CSVSeparator = ","
            StoreOnTrigger = 0
            Signals = {
                MessageRxTime = {
                    Type = uint64
                }
                MessageTxTime = {
                    Type = uint64
                }
                rotor_position_steps = {
                    Type = int32
                }
                motor_Acceleration = {
                    Type = int32
                }
            }
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        } 
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }      
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {Constants FileReaderGAM PathOptGAM AccOutGAM}
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
